import { createSlice } from "@reduxjs/toolkit";

// Define a new Redux slice named "cart"
const cartSlice = createSlice({
  // Name of the slice
  name: "cart",
  // Initial state of the cart slice
  initialState: {
    cartitems: localStorage.getItem("cartitems")? JSON.parse(localStorage.getItem("cartitems")):[] ,   // Array to hold items added to the cart
    cartTotalQty: 0,    // Total quantity of items in the cart
    cartTotalAmount: 0, // Total amount of the items in the cart
  },
  // Reducers define how the state can be updated in response to actions
  reducers: {
    // Reducer for adding an item to the cart
    addtocart: (state, action) => {
      // Check if the item already exists in the cart
      const itemIndex = state.cartitems.findIndex((item) => item.id === action.payload.id);
      if (itemIndex >= 0) {
        // If the item exists, increment its quantity
        state.cartitems[itemIndex].cartTotalQty += 1;
      } else {
        // If the item doesn't exist, add it to the cart with a quantity of 1
        const tempProduct = { ...action.payload, cartTotalQty: 1 };
        state.cartitems.push(tempProduct);
      }
      localStorage.setItem("cartitems",JSON.stringify(state.cartitems))
    },
    
  },
});

// Extract the action creator functions from the cartSlice
export const { addtocart } = cartSlice.actions;

// Export the reducer function generated by createSlice
export default cartSlice.reducer;
